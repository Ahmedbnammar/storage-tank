<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1.0">


<style>

    * {
        box-sizing: border-box;
    }


    #regForm {

        margin: 100px auto;
        font-family: Raleway;
        padding: 40px;
        width: 70%;
        min-width: 300px;
    }

    h1 {
        text-align: center;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: "Times New Roman";
        border: 1px solid #aaaaaa;
    }

    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #04AA6D;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

    button:hover {
        opacity: 0.8;
    }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

    .step.active {
        opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
        background-color: #04AA6D;
    }

    .hoverable {
        display: inline-block;
        backface-visibility: hidden;
        vertical-align: middle;
        position: relative;
        box-shadow: 0 0 1px rgba(0, 0, 0, 0);
        tranform: translateZ(0);
        transition-duration: .3s;
        transition-property: transform;
    }

    .hoverable:before {
        position: absolute;
        pointer-events: none;
        z-index: -1;
        content: '';
        top: 100%;
        left: 5%;
        height: 10px;
        width: 90%;
        opacity: 0;
        background: -webkit-radial-gradient(center, ellipse, rgba(255, 255, 255, 0.35) 0%, rgba(255, 255, 255, 0) 80%);
        background: radial-gradient(ellipse at center, rgba(255, 255, 255, 0.35) 0%, rgba(255, 255, 255, 0) 80%);
        /* W3C */
        transition-duration: 0.3s;
        transition-property: transform, opacity;
    }

    .hoverable:hover, .hoverable:active, .hoverable:focus {
        transform: translateY(-5px);
    }

    .hoverable:hover:before, .hoverable:active:before, .hoverable:focus:before {
        opacity: 1;
        transform: translateY(-5px);
    }


    @keyframes bounce-animation {
        16.65% {
            -webkit-transform: translateY(8px);
            transform: translateY(8px);
        }

        33.3% {
            -webkit-transform: translateY(-6px);
            transform: translateY(-6px);
        }

        49.95% {
            -webkit-transform: translateY(4px);
            transform: translateY(4px);
        }

        66.6% {
            -webkit-transform: translateY(-2px);
            transform: translateY(-2px);
        }

        83.25% {
            -webkit-transform: translateY(1px);
            transform: translateY(1px);
        }

        100% {
            -webkit-transform: translateY(0);
            transform: translateY(0);
        }
    }

    .bounce {
        animation-name: bounce-animation;
        animation-duration: 2s;
    }


    /*everything below here is just setting up the page, so dont worry about it */


    @media (min-width: 768px) {
        .navbar {
            text-align: center !important;
            float: none;
            display: inline-block;
        }
    }

    body {
        background-color: rgba(0, 0, 0, 1);
        font-weight: 600;
        text-align: center !important;
        color: white;
    }

    nav {
        background: none !important;
        text-transform: uppercase;

    li {
        margin-left: 3em;
        margin-right: 3em;

    a {
        transition: .5s color ease-in-out;
    }

    }
    }

    .page-title {
        opacity: .75 !important;

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #dddddd;


</style>
<body>
<div class="container-fluid">
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <ul class="nav navbar-nav">

                <li><a id="len2" class="hoverable" href="{{ path('app_login') }}">login</a></li>

            </ul>
        </div>
    </nav>
    <div id="what-the-hell-is-this">
        <div class="page-title">

        </div>
    </div>
</div>

<form id="regForm">


    <div class="tab">
        <h1>TANK GEOMETRY DATA</h1>


        <label for="di">Inside diameter,Di(corroded)</label><br>
        <p><input placeholder="InsideDiameterDiCorroded..." id="di"
                  name="InsideDiameterDiCorroded"></p>
        <label for="th">Tank height,H</label><br>
        <p><input placeholder="tankHeight..." id="th" name="tankHeight"></p>
        <label for="materialOfConstruction">Meterial of construction</label><br>
        <select class="active" name="materialOfConstruction" id="materialOfConstruction"
                style="--amber-200: black;width: 350px;"
                onchange="materialValues()">
            <option style="align-self: center" value="A283M Gr C">Select a Material</option>
            <option value="A283M Gr C">A283M Gr C</option>
            <option value="A285M Gr C">A285M Gr C</option>


        </select><br><br>
        <label for="specificMinimumYieldStress"> Specific minimum Yield Stress,Sy </label><br>
        <p><input placeholder="specificMinimumYieldStress..." name="specificMinimumYieldStress" readonly
                  id="specificMinimumYieldStress"></p>
        <label for="modulusOfElasticity">Modulus of Elasticity </label><br>
        <p><input placeholder="modulusOfElasticity" readonly name="modulusOfElasticity" id="modulusOfElasticity"></p>
        <label for="pplate">Density of Material,ρ(plate) </label><br>
        <p><input placeholder="densityOfMaterial" readonly name="densityOfMaterial" id="pplate"></p>
        <label for="corrosionAllowance">Corrosion Allowance</label><br>
        <p><input placeholder="corrosionAllowance" name="corrosionAllowance" id="corrosionAllowance"></p>
        <label for="pproduct">Min. Specific Gravity of product,ρ(product)</label><br>
        <p><input placeholder="minSpecificGravityOfProduct..." id="pproduct" name="minSpecificGravityOfProduct"></p>
        <label for="msgp">Max. Specific Gravity of produc </label><br>
        <p><input placeholder="maxSpecificGravityOfProduct..." id="msgp" name="maxSpecificGravityOfProduct"></p>
        <label for="rll">Roof live load</label><br>
        <p><input placeholder="roofLiveLoad..." onchange="hide1()" id="rll" name="roofLiveLoad"></p>
    </div>


    <div class="tab">GEOMETRY DATA:
        <label for="hor"> Outer Rim Height, Hor </label><br>
        <p><input placeholder="OuterRimHeight..." name="outerRimHeight" id="hor"></p>

        <label for="hir"> Inner Rim Height, Hir </label><br>
        <p><input placeholder="innerRimHeight..." name="innerRimHeight" id="hir"></p>

        <label for="w"> Pontoon width, w </label><br>
        <p><input placeholder="pontoonWidth..." name="pontoonWidth" id="w"></p>

        <label for="rg"> Rim Gap, </label><br>
        <p><input placeholder="rimGap..." id="rg" name="rimGap"></p>

        <label for="hext"> Outer Rim Extend above pontoon, Hext </label><br>
        <p><input placeholder="outerRimExtendAbovePontoon" id="hext" name="outerRimExtendAbovePontoon"></p>

        <label for="n"> No. of Pontoons, N </label><br>
        <p><input placeholder="noOfPontoons" name="noOfPontoons" id="n"></p>

        <label id="oor0" for="oor"> Outer Rim Diameter, Øor </label><br>
        <p><input placeholder="outerRimDiameter" readonly name="outerRimDiameter" id="oor"></p>

        <label id="oir0" for="oir"> Inner Rim Diameter, Øir </label><br>
        <p><input placeholder="innerRimDiameter..." readonly name="innerRimDiameter" id="oir"></p>

        <label id="boh0" for="boh"> Bulkhead Outer heigh </label><br>
        <p><input placeholder="Bulkhead Outer heigh..." readonly name="Boh" id="boh"></p>

        <label id="bih0" for="bih"> Bulkhead Inner heigh </label><br>
        <p><input placeholder="Bulkhead Inner heigh..." readonly name="Bih" id="bih"></p>

        <label id="wb0" for="wb"> Bulkhead Width, wb </label><br>
        <p><input placeholder="Bulkhead Width..." name="wb" readonly id="wb"></p>
    </div>


    <div class="tab">MEMBER SIZE & PROPERTIES:
        <label for="tor"> Outer Rim Thk, Tor </label><br>
        <p><input placeholder="tor..." name="tor" id="tor"></p>

        <label for="tir"> Inner Rim Thk </label><br>
        <p><input placeholder="tir..." name="tir" id="tir"></p>

        <label for="ttp"> Top Pontoon Thk </label><br>
        <p><input placeholder="ttp..." id="ttp" name="ttp"></p>

        <label for="tbp"> Btm Pontoon Thk </label><br>
        <p><input placeholder="tbp..." name="tbp" id="tbp"></p>

        <label for="tb"> Bulkheads Thk </label><br>
        <p><input placeholder="tb" name="tb" id="tb"></p>

        <label for="td"> Deck Plate Thickness </label><br>
        <p><input placeholder="td" name="td" id="td" onchange="gData()"></p>

        <label for="ct"> Circumferential Truss Plates </label><br>
        <p><input placeholder="circumferentialTrussPlates" id="ct" name="circumferentialTrussPlates"></p>

        <div class="row clearfix">
            <div class="col_half">
                <div class="input_field"><span><i aria-hidden="true"></i></span>
                    <label for="rf"> Rafter </label><br>
                    <input placeholder="Rafter" id="rf" name="rafter"/>
                </div>
            </div>
            <div class="col_half">
                <div class="input_field"><span><i aria-hidden="true"></i></span>
                    <label for="rafterNos"> Nos.of </label><br>
                    <input placeholder="Nos.of" id="rafterNos"
                           onchange="outerRim();innerRim();topPontoon();bottomPontoon();bulkheads();deckPlate()"
                           name="rafterNos"/>
                </div>
                <div class="col_half">
                    <div class="input_field"><span><i aria-hidden="true"></i></span>
                        <label for="rafterWeight"> At unit weight of </label><br>
                        <input id="rafterWeight" placeholder="At unit weight of" name="rafterWeight"/>
                    </div>
                </div>
            </div>
            <div class="col_half">
                <div class="input_field"><span><i aria-hidden="true"></i></span>
                    <label for="pt"> posts </label><br>
                    <input placeholder="posts" id="pt" name="posts"/>
                </div>
            </div>
            <div class="col_half">
                <div class="input_field"><span><i aria-hidden="true"></i></span>
                    <label for="postNos"> postsNos </label><br>
                    <input placeholder="postsNos" id="postNos" name="postsNos"/>
                </div>
                <div class="col_half">
                    <div class="input_field"><span><i aria-hidden="true"></i></span>
                        <label for="postWeight"> At unit weight of </label><br>
                        <input placeholder="At unit weight of" id="postWeight" name="postsWeight"/>
                    </div>
                </div>
            </div>


        </div>
    </div>


    <div class="tab">ROOF SUPPORT LEG:
        <h1>PONTOON LEG</h1>

        <label for="np"> No. of Pontoon Leg, Np </label><br>
        <p><input placeholder="Np..." name="Np" id="np"></p>

        <label for="pls"> Pontoon leg size </label><br>
        <p><input placeholder="Pls..." name="Pls" id="pls"></p>

        <label for="plssch"> pipe*sch </label><br>
        <p><input placeholder="PlsSch..." name="PlsSch" id="plssch"></p>

        <label for="plsw"> at unit weight of </label><br>
        <p><input placeholder="PlsWeight..." name="PlsWeight" id="plsw"></p>

        <label for="plh"> Pontoon leg housing </label><br>
        <p><input placeholder="Plh" name="Plh" id="plh"></p>

        <label for="plhsch"> pipe*sch </label><br>
        <p><input placeholder="PlhSch" name="PlhSch" id="plhsch"></p>

        <label for="plhweight"> at unit weight of </label><br>
        <p><input placeholder="PlhWeight..." name="PlhWeight" id="plhweight"></p>

        <label for="pll"> Pontoon leg length </label><br>
        <p><input placeholder="Pll" name="Pll" onchange="pontoonLegs()" id="pll"></p>

        <label for="plhl"> Pontoon leg housing length </label><br>
        <p><input placeholder="Plhl" name="Plhl" onchange="pontoonLegsHousing()" id="plhl"></p>


    </div>


    <div class="tab">ROOF SUPPORT LEG:
        <h1>Deck LEG</h1>
        <label for="nd"> No. of Deck Leg </label><br>
        <p><input placeholder="Nd..." name="Nd" id="nd"></p>

        <label for="dls"> Deck leg size,Dls </label><br>
        <p><input placeholder="Dls..." name="Dls" id="dls"></p>

        <label for="DlsSch"> pipe*sch </label><br>
        <p><input placeholder="DlsSch..." name="DlsSch" id="DlsSch"></p>

        <label for="DlsWeight"> at unit weight of </label><br>
        <p><input placeholder="DlsWeight" name="DlsWeight" id="DlsWeight"></p>

        <label for="dlh"> Deck leg housing </label><br>
        <p><input placeholder="Dlh..." name="Dlh" id="dlh"></p>

        <label for="DlhSch"> pipe*sch </label><br>
        <p><input placeholder="DlhSch" name="DlhSch" id="DlhSch"></p>

        <label for="DlhWeight"> at unit weight of </label><br>
        <p><input placeholder="DlhWeight..." name="DlhWeight" id="DlhWeight"></p>

        <label for="dll"> Deck leg length </label><br>
        <p><input placeholder="Dll" id="dll" name="Dll"></p>

        <label for="dlhl"> Deck leg housing length </label><br>
        <p><input placeholder="Dlhl" id="dlhl" onchange="deckLegs();deckLegsHousing()" name="Dlhl"></p>


    </div>


    <div class="tab">ROOF SUPPORT LEG:
        <h1>Weight Calculation</h1>

        <label for="tpw"> Top Pontoon w </label><br>
        <p><input placeholder="Top Pontoon w..." readonly name="tpw" id="tpw"></p>

        <label for="bpw"> Bottom pontoon w </label><br>
        <p><input placeholder="Bottom pontoon w..." readonly id="bpw" name="bpw"></p>

        <label for="irw"> Inner rim w </label><br>
        <p><input placeholder="Inner rim w..." id="irw" readonly name="irw"></p>

        <label for="orw"> Outer rim w </label><br>
        <p><input placeholder="Outer rim w..." id="orw" readonly name="orw"></p>

        <label for="bw"> Bulkheads w </label><br>
        <p><input placeholder="bulheads w" name="bw" readonly id="bw"></p>

        <label for="dpw"> Deck plate w </label><br>
        <p><input placeholder="deck Plate w" name="dpw" readonly id="dpw"></p>

        <label for="plw"> Pontoon legs w </label><br>
        <p><input placeholder="pontoon legs w..." id="plw" readonly name="plw"></p>

        <label for="plhw"> Pontoon legs housing w </label><br>
        <p><input placeholder="pontoon legs housing w" readonly id="plhw" name="plhw'"></p>

        <label for="dlw"> Deck legs w </label><br>
        <p><input placeholder="deck legs w" id="dlw" name="dlw" readonly></p>

        <label for="dlhw"> Deck legs housing w </label><br>
        <p><input placeholder="deck legs housing w..." id="dlhw" name="dlhw" readonly></p>

        <label for="paw"> Pontoon accessories w </label><br>
        <p><input placeholder="paw" name="paw" id="paw"></p>

        <label for="daw"> Deck accessories w </label><br>
        <p><input placeholder="daw" onchange="rafters();wPontoon()" id="daw" name="daw"></p>

        <label for="rw"> Rafters w </label><br>
        <p><input placeholder="rafters w" id="rw" name="rw" readonly></p>

        <label for="pw"> Post w </label><br>
        <p><input placeholder="posts w" id="pw" name="pw" readonly></p>


    </div>


    <div class="tab">ROOF SUPPORT LEG:
        <h1>Weight Calculation</h1>

        <label for="wp"> Pontoon components,Wpontoon </label><br>
        <p><input placeholder="pontoon components..." readonly id="wp" name="wp"></p>

        <label for="wd"> Deck components,Wdeck </label><br>
        <p><input placeholder="deck components..." id="wd" readonly name="wd"></p>

        <label for="wr"> Total weight of floating roof ,Wroof </label><br>
        <p><input placeholder="tatal weight of floating roof..." readonly id="wr" name="wr"></p>


    </div>


    <div class="tab">ROOF SUPPORT LEG:
        <h1>PONTOON VOLUME</h1>
        <label for="h1"> h1 </label><br>
        <p><input placeholder="h1..." id="h1" name="h1"></p>

        <label for="h2"> h2 </label><br>
        <p><input placeholder="h2..." id="h2" onchange="volume1()" name="h2"></p>

        <label for="h3"> h3 </label><br>
        <p><input placeholder="h3..." id="h3" onchange="volume3();tdE();operationFloatationLevel()" name="h3"></p>

        <label for="v1"> Volume 1 ,V1 </label><br>
        <p><input placeholder="v1..." id="v1" name="v1" readonly></p>

        <label for="v2"> Volume 2 ,V2 </label><br>
        <p><input placeholder="v2" id="v2" name="v2" readonly></p>

        <label for="v3"> Volume 3 ,V3 </label><br>
        <p><input placeholder="v3" id="v3" readonly name="v3"></p>

        <label for="vol"> Total pontoon Volume, Vol</label><br>
        <p><input placeholder="vol" readonly id="vol" name="vol"></p>


    </div>


    <div class="tab">SETTING DECK LEVEL:

        <h1>Operation floatation level – Deck</h1>
        <label for="tde"> equivalent thickness , Td(equivalent)</label><br>
        <p><input placeholder="tde" readonly id="tde" name="tde"></p>

        <label for="dd">Floatation height above deck ,H(deck) </label><br>
        <p><input placeholder="dd" id="dd" readonly name="dd"></p>

        <h1>Operation floatation level – Pontoon</h1>

        <label for="pdv"> Product Displacement, Vdisplacement (pontoon),pdv</label><br>
        <p><input placeholder="pdv" id="pdv" readonly name="pdv"></p>

        <label for="dp"> D(pontoon)</label><br>
        <p><input placeholder="dp" id="dp" name="dp" readonly></p>

        <label for="diffh">The difference of floattion depth in pontoon & deck </label><br>
        <p><input placeholder="dlh" id="diffh" name="dlh2" readonly></p>


    </div>


    <div class="tab">SETTING DECK LEVEL:
        <h1>Operation floatation level – Deck</h1>
        <label for="v12">Volume Displaced by the Backslope,v1 </label><br>
        <p><input placeholder="Volume Displaced by the Backslope..." readonly id="v12" name="v12 "></p>

        <label for="va">Partial volume displaced in pontoon below the deck level, Va </label><br>
        <p><input placeholder="va..." id="va" name="va" readonly></p>

        <label for="vr"> Total Volume Displaced by the roof ,V(roof),vr </label><br>
        <p><input placeholder="vr..." id="vr" name="vr"></p>

        <label for="hdeck"> Floatation height above deck ,H(deck) </label><br>
        <p><input readonly placeholder="h(deck)..." id="hdeck" name="d12"></p>


    </div>


    <div class="tab">SETTING DECK LEVEL:
        <h1>FLOATATION LEVEL FOR ROOF - PONTOON & DECK FOR 10" (254MM) OF ACCUMULATED RAIN WATER</h1>
        <label for="hrain">Rain accumulation of 10” (254 mm) ,Hrain </label><br>
        <p><input placeholder="hrain..." id="hrain" onchange="accumulatedRainWater()" name="hrain"></p>


        <label for="adeck">Deck area,Adeck </label><br>
        <p><input placeholder="Adeck..." id="adeck" readonly name="adeck"></p>

        <label for="">Volume of rain water,Vrain </label><br>
        <p><input placeholder="vrain..." id="vrain" name="vrain" readonly></p>

        <label for="vdisplacement"> vdisplacement</label><br>
        <p><input placeholder="vdisplacement..." id="vdisplacement" readonly name="vdisplacement"></p>

        <label for="hdeckr"> Floatation Height above Deck, H(deck with rain), hdeckr</label><br>
        <p><input placeholder="h(rain)" id="hdeckr" name="hrain2" readonly></p>


    </div>


    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN DATA</h1>

        <label for="t">Plate thickness Deck, t </label><br>
        <p><input placeholder="t..." id="t" name="t"></p>

        <label for="alpha">Outer radius of the deck plate,α(alpha) </label><br>
        <p><input placeholder="alpha..." id="alpha" readonly name="alpha"></p>

        <label for="pr"> Poisson's ratio,ν</label><br>
        <p><input placeholder="poisson's ratio..." onchange="centreDeckStress()" id="pr" name="pr"></p>

        <label for="e"> Modulus of Elasticity,E</label><br>
        <p><input placeholder="Modulus of Elasticity" id="e" onchange="noRainWater()" name="e"></p>

        <label for="k1">K1 </label><br>
        <p><input placeholder="k1" id="k1" name="k1" readonly></p>

        <label for="k2"> k2</label><br>
        <p><input placeholder="k2..." id="k2" name="k2" readonly></p>

        <label for="k31"> k31 </label><br>
        <p><input placeholder="k31" id="k31" name="k31" readonly></p>

        <label for="k41"> k41</label><br>
        <p><input placeholder="k41" id="k41" name="k41" readonly></p>

        <label for="k32"> k32</label><br>
        <p><input placeholder="k32..." id="k32" name="k32" readonly></p>

        <label for="k42"> k42</label><br>
        <p><input placeholder="k42" id="k42" name="k42" readonly></p>

    </div>

    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN CASE 1 NO RAIN WATER</h1>
        <label for="q1">Unit lateral pressure (equiv. weight of deck + live load that float on product)</label><br>
        <p><input id="q1" name="q1"></p>
        <label for="y1">maximum deflection,y1</label><br>
        <p><input id="y1" name="y1"></p>
        <label for="otc1">σtotal center 1</label><br>
        <p><input id="otc1" name="otc1"></p>
        <label for="obc1">σbending center 1</label><br>
        <p><input id="obc1" name="obc1"></p>
        <label for="odc1">σdiaphgram center 1 </label><br>
        <p><input id="odc1" name="odc1"></p>
        <label for="ote1">σtotal edge1</label><br>
        <p><input id="ote1" name="ote1"></p>
        <label for="obe1">σbending edge 1</label><br>
        <p><input id="obe1" name="obe1"></p>
        <label for="ode1">σdiaphgram edge 1</label><br>
        <p><input id="ode1" name="ode1"></p>
        <label for="rh1">Radial load on rim,Rh1</label><br>
        <p><input id="rh1" name="rh1"></p>


    </div>
    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN CASE 2 10" RAIN WATER</h1>
        <label for="hrain1">Rain accumulation of 10” (254 mm)</label><br>
        <p><input id="hrain1" onchange="rainWater()" name="hrain1"></p>
        <label for="adeck1">deck area</label><br>
        <p><input id="adeck1" name="adeck1"></p>
        <label for="vrain1">Volume of rain water</label><br>
        <p><input id="vrain1" name="vrain1"></p>
        <label for="wrain">Weight of 10" accumulated rain water </label><br>
        <p><input id="wrain" name="wrain"></p>
        <label for="ubl">Upward buoyant load </label><br>
        <p><input id="ubl" name="ubl"></p>
        <label for="dl">Downward load1</label><br>
        <p><input id="dl" name="dl"></p>
        <label for="ndfad">Nett downward force acting on deck </label><br>
        <p><input id="ndfad" name="ndfad"></p>
        <label for="q2">Unit lateral pressure</label><br>
        <p><input id="q2" name="q2"></p>


    </div>

    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN CASE 1 NO RAIN WATER</h1>

        <label for="y2">maximum deflection</label><br>
        <p><input id="y2" name="y2"></p>
        <label for="otc2">σtotal center 2</label><br>
        <p><input id="otc2" name="otc2"></p>
        <label for="obc2">σbending center 2</label><br>
        <p><input id="obc2" name="obc2"></p>
        <label for="odc2">σdiaphgram center 2 </label><br>
        <p><input id="odc2" name="odc2"></p>
        <label for="ote2">σtotal edge2</label><br>
        <p><input id="ote2" name="ote2"></p>
        <label for="obe2">σbending edge 2</label><br>
        <p><input id="obe2" name="obe2"></p>
        <label for="ode2">σdiaphgram edge 2</label><br>
        <p><input id="ode2" name="ode2"></p>
        <label for="rh2">Radial load on rim,Rh2</label><br>
        <p><input id="rh2" name="rh2"></p>


    </div>

    <div class="tab">PONTOON STRESS DESIGN:
        <h1>PONTOON PROPERTIES</h1>
        <label for="pdir">Nominal diameter of Inner Rim</label><br>
        <p><input placeholder="Nominal diameter of Inner Rim..." id="pdir" name="pdir"></p>
        <label for="piw">pontoon inside width</label><br>
        <p><input placeholder="pontoon inside width..." id="piw" name="piw"></p>
        <label for="ptir">Inner Rim Thickness</label><br>
        <p><input placeholder="Inner Rim Thickness" id="ptir" name="ptir"></p>
        <label for="ptor">Outer Rim Thickness</label><br>
        <p><input placeholder="Outer Rim Thickness..." id="ptor" name="ptor"></p>
        <label for="pttp">Top Pontoon Thk</label><br>
        <p><input placeholder="Top Pontoon Thk" id="pttp" name="pttp"></p>
        <label for="ptbp">Btm Pontoon Thk</label><br>
        <p><input placeholder="Btm Pontoon Thk" id="ptbp" name="ptbp"></p>
        <label for="tpsa">Top Pontoon slope angle</label><br>
        <p><input placeholder="Top Pontoon slope angle..." id="tpsa" name="tpsa"></p>
        <label for="ba">Backslope angle</label><br>
        <p><input placeholder="Backslope angle" id="ba" name="ba"></p>
        <label for="tpl">Top pontoon length</label><br>
        <p><input placeholder="Top pontoon length" id="tpl" name="tpl"></p>
        <label for="bpl">Btm pontoon length</label><br>
        <p><input placeholder="Btm pontoon length..." id="bpl" name="bpl"></p>
        <label for="horwep">Outer rim height</label><br>
        <p><input placeholder="Outer rim height" id="horwep" name="horwep"></p>
        <label for="phir">Inner rim height</label><br>
        <p><input onchange="myFunction()" placeholder="Inner rim height..." id="phir" name="phir"></p>

    </div>
    <div class="tab">
        <table>
            <tr>
                <th></th>
                <th>A(mm²)</th>
                <th>Y(mm)</th>
                <th>AY(mm3)</th>
                <th>H(mm)</th>
                <th>A(h^2)(mm4)</th>
                <th>I=(bd^3)/12(mm4)</th>
            </tr>
            <tr>
                <td>1</td>
                <td><input id="ta1"></td>
                <td><input id="ty1"></td>
                <td><input id="tay1"></td>
                <td><input id="th1"></td>
                <td><input id="tah1"></td>
                <td><input id="ti1"></td>
            </tr>
            <tr>
                <td>2</td>
                <td><input id="ta2"></td>
                <td><input id="ty2"></td>
                <td><input id="tay2"></td>
                <td><input id="th2"></td>
                <td><input id="tah2"></td>
                <td><input id="ti2"></td>
            </tr>
            <tr>
                <td>3</td>
                <td><input id="ta3"></td>
                <td><input id="ty3"></td>
                <td><input id="tay3"></td>
                <td><input id="th3"></td>
                <td><input id="tah3"></td>
                <td><input id="ti3"></td>
            </tr>
            <tr>
                <td>4</td>
                <td><input id="ta4"></td>
                <td><input id="ty4"></td>
                <td><input id="tay4"></td>
                <td><input id="th4"></td>
                <td><input id="tah4"></td>
                <td><input id="ti4"></td>
            </tr>
            <tr>
                <td>total</td>
                <td><input id="tot1"></td>
                <td><input id="tot2"></td>
                <td><input id="tot3"></td>
                <td><input id="tot4"></td>
                <td><input id="tot5"></td>
                <td><input id="tot6"></td>
            </tr>
        </table>

    </div>

    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN CASE 1 NO RAIN WATER</h1>

        <label for="c1">Neutral axis of combined section</label><br>
        <p><input id="c1" name="c1"></p>
        <label for="lx">Moment of inertia of section </label><br>
        <p><input id="lx" name="lx"></p>
        <label for="za">Section modulus available, Za</label><br>
        <p><input id="za" name="za"></p>


    </div>
    <div class="tab">
        <h1>PONTOON MATERIAL PROPERTIES</h1>


        <label for="materialOfConstruction">Meterial of construction</label><br>
        <select class="active" name="materialOfConstruction" id="materialOfConstruction2"
                style="--amber-200: black;width: 350px;"
                onchange="materialValues()">
            <option style="align-self: center" value="A283M Gr C">Select a Material</option>
            <option value="A283M Gr C">A283M Gr C</option>
            <option value="A285M Gr C">A285M Gr C</option>


        </select>
        <label for="sy">Specified minimum yield stress, Sy</label><br>
        <p><input id="sy" name="sy"></p>
        <label for="k">Yield strength reduction factor, k </label><br>
        <p><input placeholder="Yield strength reduction factor, k ..." name="k"
                  id="k"></p>
        <label for="ks">Allowable stress reduction factor, ks</label><br>
        <p><input onchange="pontoonStressDesign()" name="ks" id="ks"></p>
        <label for="fb">Allowable bending stress, Fb</label><br>
        <p><input readonly id="fb"></p>
        <label for="fc">Allowable compressive stress, Fc</label><br>
        <p><input id="fc" readonly></p>
        <label for="nlp">Number of load point at each mm,Nlp</label><br>
        <p><input readonly id="nlp"></p>
        <label for="a0">Angle α°</label><br>
        <p><input id="a0" readonly></p>

    </div>
    <div class="tab">
        <h2>HTML Table</h2>
        <table>
            <tr>
                <th>Ring stability check</th>
                <th>Mid-Point</th>
                <th>Load-Point</th>
            </tr>
            <tr>
                <td>Bending moment (N.mm)</td>
                <td><input id="c11"></td>
                <td><input id="c12"></td>

            </tr>
            <tr>
                <td>Circumferential force (N)</td>
                <td><input id="c21"></td>
                <td><input id="c22"></td>
            </tr>

            <tr>
                <td>Bending stress (N/mm^2)</td>
                <td><input id="c31"></td>
                <td><input id="c32"></td>
            </tr>
            <tr>
                <td>Circumferential stress (N/mm^2)</td>
                <td><input id="c41"></td>
                <td><input id="c42"></td>
            </tr>
            <tr>
                <td>Allow. Bending stress (N/mm^2)</td>
                <td><input id="c51"></td>
                <td><input id="c52"></td>
            </tr>
            <tr>
                <td>Allow. Axial stress (N/mm^2)</td>
                <td><input id="c61"></td>
                <td><input id="c62"></td>
            </tr>
            <tr>
                <td>Unity Check</td>
                <td><input id="c71"></td>
                <td><input id="c72"></td>
            </tr>
            <tr>
                <td>Condition</td>
                <td><input id="c81"></td>
                <td><input id="c82"></td>
            </tr>
        </table>
    </div>


    <div class="tab">
        <h1>testing number</h1>
        <label for="noa">Number of areas</label><br>
        <select class="active" name="noa" id="noa"
                style="--amber-200: black;width: 350px;"
                onchange="numberOfAreas()">
            <option style="align-self: center">Select the number of areas</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
            <option value="9">9</option>
            <option value="10">10</option>
            <option value="11">11</option>
            <option value="12">12</option>
            <option value="13">12</option>
            <option value="14">14</option>
            <option value="15">15</option>


        </select>
        <br>
        <label id="01" for="1">Nos at R1</label><br>
        <p><input id="1"></p>
        <label id="02" for="2">Nos at R2</label><br>
        <p><input id="2"></p>
        <label id="03" for="3">Nos at R3</label><br>
        <p><input id="3"></p>
        <label id="04" for="4">Nos at R4</label><br>
        <p><input id="4"></p>
        <label id="05" for="5">Nos at R5</label><br>
        <p><input id="5"></p>
        <label id="06" for="6">Nos at R6</label><br>
        <p><input id="6"></p>
        <label id="07" for="7">Nos at R7</label><br>
        <p><input id="7"></p>
        <label id="08" for="8">Nos at R8</label><br>
        <p><input id="8"></p>
        <label id="09" for="9">Nos at R9</label><br>
        <p><input id="9"></p>
        <label id="010" for="10">Nos at R10</label><br>
        <p><input id="10"></p>
        <label id="011" for="11">Nos at R11</label><br>
        <p><input id="11"></p>
        <label id="012" for="12">Nos at R12</label><br>
        <p><input id="12"></p>
        <label id="013" for="13">Nos at R13</label><br>
        <p><input id="13"></p>
        <label id="014" for="14">Nos at R14</label><br>
        <p><input id="14"></p>
        <label id="015" for="15">Nos at R15</label><br>
        <p><input id="15"></p>

    </div>
    {# <div class="tab">
        <h1>testing number</h1>
        <label id="01" for="1">Nos at R1</label><br>
        <p><input  id="1"></p>
        <label id="02" for="2">Nos at R2</label><br>
        <p><input  id="2"></p>
        <label id="03" for="3">Nos at R3</label><br>
        <p><input  id="3"></p>
        <label id="04" for="4">Nos at R4</label><br>
        <p><input  id="4"></p>
        <label id="05" for="5">Nos at R5</label><br>
        <p><input   id="5"></p>
        <label id="06" for="6">Nos at R6</label><br>
        <p><input  id="6"></p>
        <label id="07" for="7">Nos at R7</label><br>
        <p><input  id="7"></p>
        <label id="08" for="8">Nos at R8</label><br>
        <p><input  id="8"></p>
        <label id="09" for="9">Nos at R9</label><br>
        <p><input  id="9"></p>
        <label id="010" for="10">Nos at R10</label><br>
        <p><input  id="10"></p>
        <label id="011" for="11">Nos at R11</label><br>
        <p><input  id="11"></p>
        <label id="012" for="12">Nos at R12</label><br>
        <p><input  id="12"></p>
        <label id="013" for="13">Nos at R13</label><br>
        <p><input  id="13"></p>
        <label id="014" for="14">Nos at R14</label><br>
        <p><input  id="14"></p>
        <label id="015" for="15">Nos at R15</label><br>
        <p><input  id="15"></p>


    </div>

    <div class="tab">
        <h1>testing number</h1>
        <label id="01" for="1">Nos at R1</label><br>
        <p><input  id="1"></p>
        <label id="02" for="2">Nos at R2</label><br>
        <p><input  id="2"></p>
        <label id="03" for="3">Nos at R3</label><br>
        <p><input  id="3"></p>
        <label id="04" for="4">Nos at R4</label><br>
        <p><input  id="4"></p>
        <label id="05" for="5">Nos at R5</label><br>
        <p><input   id="5"></p>
        <label id="06" for="6">Nos at R6</label><br>
        <p><input  id="6"></p>
        <label id="07" for="7">Nos at R7</label><br>
        <p><input  id="7"></p>
        <label id="08" for="8">Nos at R8</label><br>
        <p><input  id="8"></p>
        <label id="09" for="9">Nos at R9</label><br>
        <p><input  id="9"></p>
        <label id="010" for="10">Nos at R10</label><br>
        <p><input  id="10"></p>
        <label id="011" for="11">Nos at R11</label><br>
        <p><input  id="11"></p>
        <label id="012" for="12">Nos at R12</label><br>
        <p><input  id="12"></p>
        <label id="013" for="13">Nos at R13</label><br>
        <p><input  id="13"></p>
        <label id="014" for="14">Nos at R14</label><br>
        <p><input  id="14"></p>
        <label id="015" for="15">Nos at R15</label><br>
        <p><input  id="15"></p>


    </div>
    <div class="tab">
        <h1>testing number</h1>
        <label id="01" for="1">Nos at R1</label><br>
        <p><input  id="1"></p>
        <label id="02" for="2">Nos at R2</label><br>
        <p><input  id="2"></p>
        <label id="03" for="3">Nos at R3</label><br>
        <p><input  id="3"></p>
        <label id="04" for="4">Nos at R4</label><br>
        <p><input  id="4"></p>
        <label id="05" for="5">Nos at R5</label><br>
        <p><input   id="5"></p>
        <label id="06" for="6">Nos at R6</label><br>
        <p><input  id="6"></p>
        <label id="07" for="47">Nos at R7</label><br>
        <p><input  id="7"></p>
        <label id="08" for="48">Nos at R8</label><br>
        <p><input  id="8"></p>
        <label id="09" for="49">Nos at R9</label><br>
        <p><input  id="49"></p>
        <label id="0410" for="410">Nos at R10</label><br>
        <p><input  id="410"></p>
        <label id="0411" for="411">Nos at R11</label><br>
        <p><input  id="411"></p>
        <label id="0412" for="412">Nos at R12</label><br>
        <p><input  id="412"></p>
        <label id="0413" for="413">Nos at R13</label><br>
        <p><input  id="413"></p>
        <label id="0414" for="414">Nos at R14</label><br>
        <p><input  id="414"></p>
        <label id="0415" for="415">Nos at R15</label><br>
        <p><input  id="415"></p>


    </div> #}

    <div style="overflow:auto;">
        <div style="float:right;">
            <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
            <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
        </div>
    </div>
    <!-- Circles which indicates the steps of the form: -->
    <div style="text-align:center;margin-top:40px;">
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>

    </div>
</form>

<script>
    let currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab
    function materialValues() {
        let x = document.getElementById("materialOfConstruction").value;
        if (x === "A283M Gr C") {
            document.getElementById("specificMinimumYieldStress").value = 205;
            document.getElementById("modulusOfElasticity").value = 209000;
            document.getElementById("pplate").value = 7850;
        }
        if (x === "A285M Gr C") {
            document.getElementById("specificMinimumYieldStress").value = 205;
            document.getElementById("modulusOfElasticity").value = 190000;
            document.getElementById("pplate").value = 7800;
        }
    }


    function hide1() {
        document.getElementById("oor").value = 0;
        document.getElementById("oir").value = 0;
        document.getElementById("boh").value = 0;
        document.getElementById("bih").value = 0;
        document.getElementById("wb").value = 0;
        document.getElementById("oor").style.display = "none";
        document.getElementById("oir").style.display = "none";
        document.getElementById("boh").style.display = "none";
        document.getElementById("bih").style.display = "none";
        document.getElementById("wb").style.display = "none";
        document.getElementById("oor0").style.display = "none";
        document.getElementById("oir0").style.display = "none";
        document.getElementById("boh0").style.display = "none";
        document.getElementById("bih0").style.display = "none";
        document.getElementById("wb0").style.display = "none";
    }


    function numberOfAreas() {
        let n = parseInt(document.getElementById("noa").value);
        for (let i = 1; i < 16; i++) {
            document.getElementById(i.toString()).value = "";
            document.getElementById(i.toString()).style.display = "block";

            document.getElementById("0" + i.toString()).style.display = "block";

        }

        for (let i = 15; i > n; i--) {
            document.getElementById(i.toString()).value = 0;
            document.getElementById(i.toString()).style.display = "none";

            document.getElementById("0" + i.toString()).style.display = "none";
        }


    }

    function gData() {
        let di = parseFloat(document.getElementById("di").value);
        let rg = parseFloat(document.getElementById("rg").value);
        let w = parseFloat(document.getElementById("w").value);
        let hor = parseFloat(document.getElementById("hor").value);
        let hext = parseFloat(document.getElementById("hext").value);
        let ttp = parseFloat(document.getElementById("ttp").value);
        let tbp = parseFloat(document.getElementById("tbp").value);
        let tir = parseFloat(document.getElementById("tir").value);
        let hir = parseFloat(document.getElementById("hir").value);
        let tor = parseFloat(document.getElementById("tor").value);
        let oor = di - 2 * rg;
        document.getElementById("oor").value = oor;
        document.getElementById("oir").value = oor - 2 * w;
        document.getElementById("boh").value = hor - hext - ttp - tbp;
        document.getElementById("bih").value = hir - ttp - tbp;
        document.getElementById("wb").value = w - tir - tor;
        document.getElementById("oor").style.display = "block";
        document.getElementById("oir").style.display = "block";
        document.getElementById("boh").style.display = "block";
        document.getElementById("bih").style.display = "block";
        document.getElementById("wb").style.display = "block";
        document.getElementById("oor0").style.display = "block";
        document.getElementById("oir0").style.display = "block";
        document.getElementById("boh0").style.display = "block";
        document.getElementById("bih0").style.display = "block";
        document.getElementById("wb0").style.display = "block";


    }

    function outerRim() {
        var oor = document.getElementById("oor").value;
        var tor = document.getElementById("tor").value;
        var pplate = document.getElementById("pplate").value;
        var hor = document.getElementById("hor").value;
        document.getElementById("orw").value = ((3.14159 / 4) * ((oor * pplate * hor * tor)));
    }

    function innerRim() {
        var hir = document.getElementById("hir").value;
        var oir = document.getElementById("oir").value;
        var pplate = document.getElementById("pplate").value;
        var tir = document.getElementById("tir").value;
        document.getElementById("irw").value = (3.14159 * oir * pplate * tir * hir);
    }


    function bulkheads() {
        var boh = parseFloat(document.getElementById("boh").value);
        var bih = parseFloat(document.getElementById("bih").value);
        var pplate = parseFloat(document.getElementById("pplate").value);
        var wb = parseFloat(document.getElementById("wb").value);
        var tb = parseFloat(document.getElementById("tb").value);
        var n = parseFloat(document.getElementById("n").value);
        document.getElementById("bw").value = (1 / 2) * (boh + bih) * tb * wb * n * pplate;

    }

    function deckPlate() {
        var oir = document.getElementById("oir").value;
        var td = document.getElementById("td").value;
        var pplate = document.getElementById("pplate").value;
        document.getElementById("dpw").value = (3.14159 / 4) * (oir * oir) * td * pplate;
    }

    function topPontoon() {
        var oor = parseFloat(document.getElementById("oor").value);
        var oir = parseFloat(document.getElementById("oir").value);
        var pplate = parseFloat(document.getElementById("pplate").value);
        var ttp = parseFloat(document.getElementById("ttp").value);
        //document.getElementById("tpw").value = ((3.14159 / 4) * ((oor * oor) - (oir * oir)) * pplate * ttp);
        document.getElementById("tpw").value = oor;
    }

    function bottomPontoon() {
        var oor = document.getElementById("oor").value;
        var oir = document.getElementById("oir").value;
        var pplate = document.getElementById("pplate").value;
        var tbp = document.getElementById("tbp").value;
        document.getElementById("bpw").value = ((3.14159 / 4) * ((oor * oor) - (oir * oir)) * pplate * tbp);
    }

    function pontoonLegs() {
        var np = document.getElementById("np").value;
        var pls = document.getElementById("pls").value;
        var pll = document.getElementById("pll").value;
        document.getElementById("plw").value = (np * pls * pll) / 1000;

    }

    function pontoonLegsHousing() {
        var np = document.getElementById("np").value;
        var plh = document.getElementById("plh").value;
        var plhl = document.getElementById("plhl").value;
        document.getElementById("plhw").value = (np * plh * plhl) / 1000;

    }

    function deckLegs() {
        var np = document.getElementById("nd").value;
        var plh = document.getElementById("dls").value;
        var plhl = document.getElementById("dll").value;
        document.getElementById("dlw").value = (np * plh * plhl) / 1000;

    }

    function deckLegsHousing() {
        var np = document.getElementById("nd").value;
        var plh = document.getElementById("dlh").value;
        var plhl = document.getElementById("dlhl").value;
        document.getElementById("dlhw").value = (np * plh * plhl) / 1000;

    }

    function rafters() {
        var w = document.getElementById("w").value;
        var rafterNos = document.getElementById("rafterNos").value;
        var rafterWeight = document.getElementById("rafterWeight").value;
        document.getElementById("rw").value = rafterNos * w * rafterWeight;
        var hor = parseFloat(document.getElementById("hor").value);
        var hir = parseFloat(document.getElementById("hir").value);
        var hext = parseFloat(document.getElementById("hext").value);
        var postWeight = parseFloat(document.getElementById("postWeight").value);
        var postNos = parseFloat(document.getElementById("postNos").value);

        document.getElementById("pw").value = parseFloat(((hir + hor - hext) / 1000) * postNos * postWeight);
    }


    function wPontoon() {
        let tpw = parseFloat(document.getElementById("tpw").value);
        let bpw = parseFloat(document.getElementById("bpw").value);
        let irw = parseFloat(document.getElementById("irw").value);
        let orw = parseFloat(document.getElementById("orw").value);
        let bw = parseFloat(document.getElementById("bw").value);
        let plw = parseFloat(document.getElementById("plw").value);
        let plhw = parseFloat(document.getElementById("plhw").value);
        let paw = parseFloat(document.getElementById("paw").value);
        let rw = parseFloat(document.getElementById("rw").value);
        let pw = parseFloat(document.getElementById("pw").value);
        let dpw = parseFloat(document.getElementById("dpw").value);
        let dlw = parseFloat(document.getElementById("dlw").value);
        let daw = parseFloat(document.getElementById("daw").value);
        let wp = tpw + bpw + irw + orw + bw + plhw + plw + paw + rw + pw;
        let wd = dpw + dlw + daw;
        document.getElementById("wp").value = wp;
        document.getElementById("wd").value = wd;
        document.getElementById("wr").value = wp + wd;
    }

    function volume1() {
        var h1 = parseFloat(document.getElementById("h1").value);
        var oir = parseFloat(document.getElementById("oir").value);
        var w = parseFloat(document.getElementById("w").value);
        document.getElementById("v1").value = (0.5 * h1 * 1.6 * (((oir + 2) * 2) / 3 * w) / 100);
        var h2 = parseFloat(document.getElementById("h2").value);
        var oor = parseFloat(document.getElementById("oor").value);
        document.getElementById("v2").value = h2 * 1.6 * (((oir + oor) / 2) / 100);
    }


    function volume3() {
        var h3 = parseFloat(document.getElementById("h3").value);
        var oir = parseFloat(document.getElementById("oir").value);
        var w = parseFloat(document.getElementById("w").value);
        var v1 = parseFloat(document.getElementById("v1").value);
        var v2 = parseFloat(document.getElementById("v2").value);
        var v3 = (0.5 * h3 * 1.6 * (((oir + 2) * 2) / 3 * w) / 100);
        document.getElementById("v3").value = v3;
        document.getElementById("vol").value = v1 + v2 + v3;
    }

    function tdE() {
        var wd = document.getElementById("wd").value;
        var dpw = document.getElementById("dpw").value;
        var td = document.getElementById("td").value;
        var pplate = document.getElementById("pplate").value;
        var pproduct = document.getElementById("pproduct").value;
        document.getElementById("tde").value = (wd / dpw) * td;
        document.getElementById("dd").value = ((pplate / (pproduct * 1000))) * (wd / dpw) * td;
        operationFloatation();

    }

    function operationFloatation() {
        let wp = parseFloat(document.getElementById("wp").value);
        let pp = parseFloat(document.getElementById("pproduct").value);
        let oor = parseFloat(document.getElementById("oor").value);
        let oir = parseFloat(document.getElementById("oir").value);
        let v1 = parseFloat(document.getElementById("v1").value);
        let dd = parseFloat(document.getElementById("dd").value);


        let vd = wp / (pp * 100);
        document.getElementById("pdv").value = vd;
        let dp = (vd - v1) * Math.pow(1000, 3) / ((3.14 / 4) * (Math.pow(oor, 2) - Math.pow(oir, 2)));
        document.getElementById("dp").value = dp;
        document.getElementById("diffh").value = dp - dd;


        {# **** part2 ****

        let h1 = parseFloat(document.getElementById("h1").value);
        let w = parseFloat(document.getElementById("w").value);
        let h = parseFloat(document.getElementById("h").value);
        let v1 = parseFloat(document.getElementById("v1").value);
        let v1 = parseFloat(document.getElementById("v1").value);
        #}

    }


    function accumulatedRainWater() {
        let oir = parseFloat(document.getElementById("oir").value);
        let hrain = parseFloat(document.getElementById("hrain").value);
        let wroof = parseFloat(document.getElementById("wr").value);
        let pp = parseFloat(document.getElementById("pproduct").value);
        let v1 = parseFloat(document.getElementById("v1").value);
        let va = parseFloat(document.getElementById("va").value);
        let adeck = (Math.PI / 4) * Math.pow(oir, 2);
        let vrain = adeck * hrain * 1000000000;
        let wrain = vrain * 1000;
        let vdisplacement = ((wroof + wrain) * 1000) / (pp * 1000);
        document.getElementById("hdeckr").value = (vdisplacement - v1 - va) / ((Math.PI / 4) * Math.pow((oir / 1000), 2)) * 1000;
        document.getElementById("adeck").value = adeck;
        document.getElementById("vrain").value = vrain;
        document.getElementById("wrain").value = wrain;
        document.getElementById("vdisplacement").value = vdisplacement;
        document.getElementById("alpha").value = oir / 2;

    }

    function centreDeckStress() {
        let v = parseFloat(document.getElementById("pr").value);
        document.getElementById("k1").value = (5.33 / (1 - Math.pow(v, 2)));
        document.getElementById("k2").value = (2.6 / (1 - Math.pow(v, 2)));
        document.getElementById("k31").value = (2 / (1 - v));
        document.getElementById("k32").value = (4 / (1 - Math.pow(v, 2)));
        document.getElementById("k41").value = 0.976;
        document.getElementById("k42").value = 1.73;


    }

    function noRainWater() {
        var dd = parseFloat(document.getElementById("dd").value);
        var wd = parseFloat(document.getElementById("wd").value);
        var oir = parseFloat(document.getElementById("oir").value);
        var rll = parseFloat(document.getElementById("rll").value);
        var k2 = parseFloat(document.getElementById("k2").value);
        var alpha = parseFloat(document.getElementById("alpha").value);
        var e = parseFloat(document.getElementById("e").value);
        var t = parseFloat(document.getElementById("t").value);
        var k1 = parseFloat(document.getElementById("k1").value);
        var k31 = parseFloat(document.getElementById("k31").value);
        var k41 = parseFloat(document.getElementById("k41").value);
        var k32 = parseFloat(document.getElementById("k32").value);
        var k42 = parseFloat(document.getElementById("k42").value);

        var q1;
        var pproduct = parseFloat(document.getElementById("pproduct").value);
        if (Math.abs(9.8 * (wd - (3.14 / 4) * Math.pow(oir, 2) * dd * pproduct * 1000 / 1000000000) / (3.14 / 4) * Math.pow(oir, 2)) > Math.abs(9.8 * (wd - (3.14 / 4) * Math.pow(oir, 2) * dd * pproduct * 1000 / 1000000000) / (3.14 / 4) * Math.pow(oir, 2) + rll / 1000)) {
            q1 = 9.8 * (wd - (3.14 / 4) * Math.pow(oir, 2) * dd * pproduct * 1000 / 1000000000) / (3.14 / 4) * Math.pow(oir, 2);
        } else {
            q1 = 9.8 * (wd - (3.14 / 4) * Math.pow(oir, 2) * dd * pproduct * 1000 / 1000000000) / (3.14 / 4) * Math.pow(oir, 2) + rll / 1000;
        }
        document.getElementById("q1").value = q1;

        var y1 = cubic((k2 / (Math.pow(t, 3))), 0, (k1 / t), ((q1 * Math.pow(alpha, 4)) / (e * Math.pow(t, 4))));
        document.getElementById("y1").value = y1;
        document.getElementById("otc1").value = (k31 * y1 / t + k41 * Math.pow(y1 / t, 2)) * (e * Math.pow(t, 2) / Math.pow(alpha, 2));
        document.getElementById("obc1").value = k31 * y1 * e * t / Math.pow(alpha, 2);
        document.getElementById("odc1").value = k41 * Math.pow(y1, 2) * e / Math.pow(alpha, 2);
        document.getElementById("ote1").value = (k32 * y1 / t + k42 * Math.pow(y1 / t, 2)) * (e * Math.pow(t, 2) / Math.pow(alpha, 2));
        document.getElementById("obe1").value = k32 * y1 * e * t / Math.pow(alpha, 2);
        document.getElementById("ode1").value = k42 * Math.pow(y1, 2) * e / Math.pow(alpha, 2);
        document.getElementById("rh1").value = (k41 * Math.pow(y1, 2) * e / Math.pow(alpha, 2)) * t;

    }

    function rainWater() {
        let hrain = parseFloat(document.getElementById("hrain1").value);
        let oir = parseFloat(document.getElementById("oir").value);
        let hdeckr = parseFloat(document.getElementById("hdeckr").value);
        let pp = parseFloat(document.getElementById("pproduct").value);
        let wd = parseFloat(document.getElementById("wd").value);
        let a = (oir) / 2;
        let adeck = (Math.PI / 4) * (Math.pow(oir, 2));
        let vrain = adeck * hrain / Math.pow(1000, 3);
        let wrain = vrain * 1000;
        let ubl = ((Math.PI / 4) * Math.pow(oir, 2) * hdeckr * pp * 1000) / 1000000000;
        let dl = wrain + wd;
        let ndfad = (ubl - dl) / adeck;
        let q2 = ndfad * 9.81 / 1000000;
        document.getElementById("q2").value = q2;
        document.getElementById("adeck1").value = adeck;
        document.getElementById("vrain1").value = vrain;
        document.getElementById("wrain").value = wrain;
        document.getElementById("ubl").value = ubl;
        document.getElementById("ndfad").value = ndfad;
        document.getElementById("dl").value = dl;

        {# ***************     part 2     *************** #}


        var k2 = parseFloat(document.getElementById("k2").value);
        var alpha = parseFloat(document.getElementById("alpha").value);
        var e = parseFloat(document.getElementById("e").value);
        var t = parseFloat(document.getElementById("t").value);
        var k1 = parseFloat(document.getElementById("k1").value);
        var k31 = parseFloat(document.getElementById("k31").value);
        var k41 = parseFloat(document.getElementById("k41").value);
        var k32 = parseFloat(document.getElementById("k32").value);
        var k42 = parseFloat(document.getElementById("k42").value);


        var y1 = cubic((k2 / (Math.pow(t, 3))), 0, (k1 / t), ((q2 * Math.pow(alpha, 4)) / (e * Math.pow(t, 4))));
        document.getElementById("y2").value = y1;
        document.getElementById("otc2").value = (k31 * y1 / t + k41 * Math.pow(y1 / t, 2)) * (e * Math.pow(t, 2) / Math.pow(alpha, 2));
        document.getElementById("obc2").value = k31 * y1 * e * t / Math.pow(alpha, 2);
        document.getElementById("odc2").value = k41 * Math.pow(y1, 2) * e / Math.pow(alpha, 2);
        document.getElementById("ote2").value = (k32 * y1 / t + k42 * Math.pow(y1 / t, 2)) * (e * Math.pow(t, 2) / Math.pow(alpha, 2));
        document.getElementById("obe2").value = k32 * y1 * e * t / Math.pow(alpha, 2);
        document.getElementById("ode2").value = k42 * Math.pow(y1, 2) * e / Math.pow(alpha, 2);
        document.getElementById("rh2").value = (k41 * Math.pow(y1, 2) * e / Math.pow(alpha, 2)) * t;


    }
    {# azer #}

    function myFunction() {

        let tir = parseFloat(document.getElementById("tir").value);
        let hir = parseFloat(document.getElementById("hir").value);
        let tpl = parseFloat(document.getElementById("tpl").value);
        let bpl = parseFloat(document.getElementById("bpl").value);
        let ttp = parseFloat(document.getElementById("ttp").value);
        let horwep = parseFloat(document.getElementById("horwep").value);
        let tor = parseFloat(document.getElementById("tor").value);
        let tbp = parseFloat(document.getElementById("tbp").value);
        let piw = parseFloat(document.getElementById("piw").value);

        let a1 = tir * hir;
        let a2 = tpl * ttp;
        let a3 = bpl * tbp;
        let a4 = horwep * tor;
        let ta = a1 + a2 + a3 + a4;

        let y1 = tir / 2;
        let y2 = 0.5 * piw + tir;
        let y3 = 0.5 * piw + tir;
        let y4 = 0.5 * tor + piw + tir;
        let tay = a1 * y1 + a2 * y2 + a3 * y3 + a4 * y4;
        let c1 = tay / ta;
        let h1 = Math.abs(y1 - c1);
        let h2 = Math.abs(y2 - c1);
        let h3 = Math.abs(y3 - c1);
        let h4 = Math.abs(y4 - c1);

        document.getElementById("ta1").value = a1;
        document.getElementById("ta2").value = a2;
        document.getElementById("ta3").value = a3;
        document.getElementById("ta4").value = a4;
        document.getElementById("ty1").value = y1;
        document.getElementById("ty2").value = y2;
        document.getElementById("ty3").value = y3;
        document.getElementById("ty4").value = y4;
        document.getElementById("th1").value = h1;
        document.getElementById("th2").value = h2;
        document.getElementById("th3").value = h3;
        document.getElementById("th4").value = h4;
        document.getElementById("tay1").value = a1 * y1;
        document.getElementById("tay2").value = a2 * y2;
        document.getElementById("tay3").value = a3 * y3;
        document.getElementById("tay4").value = a4 * y4;
        document.getElementById("tah1").value = a1 * Math.pow(h1, 2);
        document.getElementById("tah2").value = a2 * Math.pow(h2, 2);
        document.getElementById("tah3").value = a3 * Math.pow(h3, 2);
        document.getElementById("tah4").value = a4 * Math.pow(h4, 2);
        document.getElementById("ti1").value = Math.abs((hir * Math.pow(tir, 3)) / 12);
        document.getElementById("ti2").value = Math.abs((ttp * Math.pow(tpl, 3)) / 12);
        document.getElementById("ti3").value = Math.abs((tbp * Math.pow(bpl, 3)) / 12);
        document.getElementById("ti4").value = Math.abs((horwep * Math.pow(tor, 3)) / 12);
        document.getElementById("tot1").value = ta;
        document.getElementById("tot3").value = tay;
        let tah = a1 * Math.pow(h1, 2) + a2 * Math.pow(h2, 2) + a3 * Math.pow(h3, 2) + a4 * Math.pow(h4, 2);
        document.getElementById("tot5").value = tah;
        let ti = Math.abs((hir * Math.pow(tir, 3)) / 12) + Math.abs((ttp * Math.pow(tpl, 3)) / 12) + Math.abs((tbp * Math.pow(bpl, 3)) / 12) + Math.abs((horwep * Math.pow(tor, 3)) / 12);
        document.getElementById("tot6").value = ti;

        let lx = ti + tah;


        document.getElementById("za").value = (lx / Math.max(c1, ((piw + tir + tor) - c1)))
        document.getElementById("lx").value = lx;
        document.getElementById("c1").value = c1;
    }


    function pontoonStressDesign() {
        let sy = parseFloat(document.getElementById("sy").value);
        let oir = parseFloat(document.getElementById("oir").value);
        let rh1 = parseFloat(document.getElementById("rh1").value);
        let rh2 = parseFloat(document.getElementById("rh2").value);
        let za = parseFloat(document.getElementById("za").value);
        let ta = parseFloat(document.getElementById("tot1").value);


        let nlp = Math.PI * oir;
        let a = 0.5 * 360 / nlp;
        let fb = (2 / 3) * sy;
        let fc = 0.6 * sy;


        document.getElementById("fb").value = fb;
        document.getElementById("fc").value = fc;
        document.getElementById("nlp").value = nlp;
        document.getElementById("a0").value = a;


        let rh;
        if (rh1 === 0) {
            rh = rh1;
        } else {
            rh = rh2;
        }

        // part 2


        let bm1 = ((rh * oir) / 4) * ((1 / Math.sin(a)) - (1 / a));
        let bm2 = ((rh * oir) / 4) * ((1 / a) - (1 / Math.tan(a)));
        let cf1 = rh / (2 * Math.sin(a));
        let cf2 = rh / (2 * Math.tan(a));
        let bs1 = bm1 / za;
        let bs2 = bm2 / za;
        let cs1 = cf1 / ta;
        let cs2 = cf2 / ta;
        let uc1 = (bs1 / fb) + (cs1 / fc);
        let uc2 = (bs2 / fb) + (cs2 / fc);
        document.getElementById("c11").value = bm1;
        document.getElementById("c12").value = bm2;

        document.getElementById("c21").value = cf1;
        document.getElementById("c22").value = cf2;

        document.getElementById("c31").value = bs1;
        document.getElementById("c32").value = bs2;

        document.getElementById("c41").value = cs1;
        document.getElementById("c42").value = cs2;

        document.getElementById("c51").value = fb;
        document.getElementById("c52").value = fb;
        document.getElementById("c61").value = fc;
        document.getElementById("c62").value = fc;


        document.getElementById("c71").value = uc1;
        document.getElementById("c72").value = uc2;

        document.getElementById("c81").value = condition(uc1);
        document.getElementById("c82").value = condition(uc2);


        function condition(x) {
            if (Math.abs(x) < 1) {
                return "valid";
            } else {
                return "not valid";
            }
        }
    }

    function operationFloatationLevel(){
        let oir=parseFloat(document.getElementById("oir").value);
        let oor=parseFloat(document.getElementById("oor").value);
        let bih=parseFloat(document.getElementById("bih").value);
        let wr=parseFloat(document.getElementById("wr").value);
      //  let h=parseFloat(document.getElementById("h").value);
        let pp=parseFloat(document.getElementById("pproduct").value);
        let h1=parseFloat(document.getElementById("h1").value);
        let w=parseFloat(document.getElementById("w").value);
        let v2=parseFloat(document.getElementById("v2").value);


        let v1 =0.5*h1*(oir+2*2/w)/1000;
        let va =(bih)*v2;
        let vr=wr/(pp*1000);
        document.getElementById("hdeck").value=(vr-v1-va)/((Math.PI/4)*(Math.pow((oor/1000),2)))*1000;
        document.getElementById("v12").value=v1;
        document.getElementById("va").value=va;
        document.getElementById("vr").value=vr;





    }






    {# ******************************************************************************************************************* #}










    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        //... and run a function that will display the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
        if (currentTab >= x.length) {
            // ... the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }

    function cubic(a, b, c, d) {
        var pi, q, del;
        pi = Math.PI;
        e = Math.E;

        var x = [];


        for (k = 0; k <= 2; k++) {
            x[k] = 0;
        }

        with (Math) {
            a = eval(a);
            b = eval(b);
            c = eval(c);
            d = eval(d);
            vt = -b / 3 / a;
            mvt = -vt;
            p = c / a - b * b / 3 / a / a;
            q = b * b * b / a / a / a / 13.5 + d / a - b * c / 3 / a / a;
            if (abs(p) < 1e-14) {
                p = 0
            }
            if (abs(q) < 1e-14) {
                q = 0
            }
            del = q * q / 4 + p * p * p / 27;
            if (abs(del) < 1e-14) {
                del = 0
            }


            if (del <= 0) {
                if (p !== 0) {
                    kos = -q / 2 / sqrt(-p * p * p / 27);
                    r = sqrt(-p / 3)
                } else {
                    kos = 0;
                    r = 0
                }  // vu que del<=0, si p=0, alors del=0
                if (abs(kos === 1)) {
                    alpha = -pi * (kos - 1) / 2
                } else {
                    alpha = acos(kos)
                }
                for (k = 0; k <= 2; k++) {
                    xk = 2 * r * cos((alpha + 2 * k * pi) / 3) + vt;
                    x[k] = arrondi(xk)
                }
                if (r === 0) {
                    triple = "Solution triple :"
                } else {
                    triple = "Trois solutions :"
                }
                return Math.max(x[0], x[1], x[2]);
            }
// ----------- fin if
            else {
                xuni = arrondi(uv(1) + uv(-1) + vt);
                return xuni;
            } //---------------------------------- fin else if(del<=0)
        } // fin with
        // ----------------------------------fin procedure

        function uv(sg) {
            with (Math) {
                r = sqrt(del);
                z = -q / 2 + sg * r;
                return sgn(z) * pow(abs(z), 1 / 3)
            }
        }

        function sgn(x) {
            s = (x > 0) - (x < 0);
            return s
        }

        function arrondi(x) {
            return sgn(x) * Math.floor(Math.abs(x) * 1e10 + .5) / 1e10
        }
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }

    $(function () {
        var str = '#len'; //increment by 1 up to 1-nelemnts
        $(document).ready(function () {
            var i, stop;
            i = 1;
            stop = 4; //num elements
            setInterval(function () {
                if (i > stop) {
                    return;
                }
                $('#len' + (i++)).toggleClass('bounce');
            }, 500)
        });
    });
</script>

</body>
</html>
