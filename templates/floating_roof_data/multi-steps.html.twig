<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1.0">


<style>

    * {
        box-sizing: border-box;
    }


    #regForm {

        margin: 100px auto;
        font-family: Raleway;
        padding: 40px;
        width: 70%;
        min-width: 300px;
    }

    h1 {
        text-align: center;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: "Times New Roman";
        border: 1px solid #aaaaaa;
    }

    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #04AA6D;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

    button:hover {
        opacity: 0.8;
    }

    #prevBtn {
        background-color: #bbbbbb;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

    .step.active {
        opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
        background-color: #04AA6D;
    }

    .hoverable {
        display: inline-block;
        backface-visibility: hidden;
        vertical-align: middle;
        position: relative;
        box-shadow: 0 0 1px rgba(0, 0, 0, 0);
        tranform: translateZ(0);
        transition-duration: .3s;
        transition-property: transform;
    }

    .hoverable:before {
        position: absolute;
        pointer-events: none;
        z-index: -1;
        content: '';
        top: 100%;
        left: 5%;
        height: 10px;
        width: 90%;
        opacity: 0;
        background: -webkit-radial-gradient(center, ellipse, rgba(255, 255, 255, 0.35) 0%, rgba(255, 255, 255, 0) 80%);
        background: radial-gradient(ellipse at center, rgba(255, 255, 255, 0.35) 0%, rgba(255, 255, 255, 0) 80%);
        /* W3C */
        transition-duration: 0.3s;
        transition-property: transform, opacity;
    }

    .hoverable:hover, .hoverable:active, .hoverable:focus {
        transform: translateY(-5px);
    }

    .hoverable:hover:before, .hoverable:active:before, .hoverable:focus:before {
        opacity: 1;
        transform: translateY(-5px);
    }


    @keyframes bounce-animation {
        16.65% {
            -webkit-transform: translateY(8px);
            transform: translateY(8px);
        }

        33.3% {
            -webkit-transform: translateY(-6px);
            transform: translateY(-6px);
        }

        49.95% {
            -webkit-transform: translateY(4px);
            transform: translateY(4px);
        }

        66.6% {
            -webkit-transform: translateY(-2px);
            transform: translateY(-2px);
        }

        83.25% {
            -webkit-transform: translateY(1px);
            transform: translateY(1px);
        }

        100% {
            -webkit-transform: translateY(0);
            transform: translateY(0);
        }
    }

    .bounce {
        animation-name: bounce-animation;
        animation-duration: 2s;
    }


    /*everything below here is just setting up the page, so dont worry about it */


    @media (min-width: 768px) {
        .navbar {
            text-align: center !important;
            float: none;
            display: inline-block;
        }
    }

    body {
        background-color: rgba(0, 0, 0, 1);
        font-weight: 600;
        text-align: center !important;
        color: white;
    }

    nav {
        background: none !important;
        text-transform: uppercase;

    li {
        margin-left: 3em;
        margin-right: 3em;

    a {
        transition: .5s color ease-in-out;
    }

    }
    }

    .page-title {
        opacity: .75 !important;

    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #dddddd;


</style>
<body>
<div class="container-fluid">
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <ul class="nav navbar-nav">
                <li><a id="len1" href="{{ path('app_floating_roof_data') }}" class="hoverable">floating roof data</a>
                </li>
                <li><a id="len2" class="hoverable" href="{{ path('app_login') }}">login</a></li>
                <li><a id="len3" class="hoverable" href="#">page3</a></li>
                <li><a id="len4" class="hoverable" href="#">page4</a></li>
            </ul>
        </div>
    </nav>
    <div id="what-the-hell-is-this">
        <div class="page-title">

        </div>
    </div>
</div>

<form id="regForm">


    <div class="tab">
        <label for="test">HTML</label><br>
        <p><input placeholder="InsideDiameterDiCorroded..." onchange="tests()" id="test"
                  name="InsideDiameterDiCorroded"></p>

        <p><input placeholder="tankHeight..." id="testing" onfocus="testss()" name="tankHeight"></p>
        <select class="active" name="materialOfConstruction" id="materialOfConstruction" style="--amber-200: black"
                onchange="materialValues()">

            <option value="A283M Gr C">A283M Gr C</option>
            <option value="A285M Gr C">A285M Gr C</option>


        </select>
        <p><input placeholder="specificMinimumYieldStress..." name="specificMinimumYieldStress" readonly
                  id="specificMinimumYieldStress"></p>
        <p><input placeholder="modulusOfElasticity" readonly name="modulusOfElasticity" id="modulusOfElasticity"></p>
        <p><input placeholder="densityOfMaterial" readonly name="densityOfMaterial" id="pplate"></p>
        <p><input placeholder="corrosionAllowance" name="corrosionAllowance"></p>
        <p><input placeholder="minSpecificGravityOfProduct..." id="pproduct" name="minSpecificGravityOfProduct"></p>
        <p><input placeholder="maxSpecificGravityOfProduct..." name="maxSpecificGravityOfProduct"></p>
        <p><input placeholder="roofLiveLoad..." id="rll" name="roofLiveLoad"></p>
    </div>
    <div class="tab">GEOMETRY DATA:
        <p><input placeholder="OuterRimHeight..." name="outerRimHeight" id="hor"></p>
        <p><input placeholder="innerRimHeight..." name="innerRimHeight" id="hir"></p>
        <p><input placeholder="pontoonWidth..." name="pontoonWidth" id="w"></p>
        <p><input placeholder="rimGap..." name="rimGap"></p>
        <p><input placeholder="outerRimExtendAbovePontoon" id="hext" name="outerRimExtendAbovePontoon"></p>
        <p><input placeholder="noOfPontoons" name="noOfPontoons" id="n"></p>
        <p><input placeholder="outerRimDiameter" name="outerRimDiameter" id="oor"></p>
        <p><input placeholder="innerRimDiameter..." name="innerRimDiameter" id="oir"></p>
        <p><input placeholder="Bulkhead Outer heigh..." name="Boh" id="boh"></p>
        <p><input placeholder="Bulkhead Inner heigh..." name="Bih" id="bih"></p>
        <p><input placeholder="Bulkhead Width..." name="wb" id="wb"></p>
    </div>
    <div class="tab">MEMBER SIZE & PROPERTIES:
        <p><input placeholder="tor..." name="tor" id="tor" onchange="outerRim()"></p>
        <p><input placeholder="tir..." name="tir" id="tir" onchange="innerRim()"></p>
        <p><input placeholder="ttp..." id="ttp" name="ttp" onchange="topPontoon()"></p>
        <p><input placeholder="tbp..." name="tbp" id="tbp" onchange="bottomPontoon()"></p>
        <p><input placeholder="tb" name="tb" id="tb" onchange="bulkheads()"></p>
        <p><input placeholder="td" name="td" id="td" onchange="deckPlate()"></p>
        <p><input placeholder="circumferentialTrussPlates" name="circumferentialTrussPlates"></p>
        <div class="row clearfix">
            <div class="col_half">
                <div class="input_field"><span><i aria-hidden="true"></i></span>
                    <input placeholder="Rafter" name="rafter"/>
                </div>
            </div>
            <div class="col_half">
                <div class="input_field"><span><i aria-hidden="true"></i></span>
                    <input placeholder="Nos.of" id="rafterNos" name="rafterNos"/>
                </div>
                <div class="col_half">
                    <div class="input_field"><span><i aria-hidden="true"></i></span>
                        <input id="rafterWeight" placeholder="At unit weight of" name="rafterWeight"/>
                    </div>
                </div>
            </div>
            <div class="col_half">
                <div class="input_field"><span><i aria-hidden="true"></i></span>
                    <input placeholder="posts" name="posts"/>
                </div>
            </div>
            <div class="col_half">
                <div class="input_field"><span><i aria-hidden="true"></i></span>
                    <input placeholder="postsNos" id="postNos" name="postsNos"/>
                </div>
                <div class="col_half">
                    <div class="input_field"><span><i aria-hidden="true"></i></span>
                        <input placeholder="At unit weight of" id="postWeight" name="postsWeight"/>
                    </div>
                </div>
            </div>


        </div>
    </div>
    <div class="tab">ROOF SUPPORT LEG:
        <h1>PONTOON LEG</h1>
        <p><input placeholder="Np..." name="Np" id="np"></p>
        <p><input placeholder="Pls..." name="Pls" id="pls"></p>
        <p><input placeholder="PlsSch..." name="PlsSch" id="plssch"></p>
        <p><input placeholder="PlsWeight..." name="PlsWeight" id="plsw"></p>
        <p><input placeholder="Plh" name="Plh" id="plh"></p>
        <p><input placeholder="PlhSch" name="PlhSch" id="plhsch"></p>
        <p><input placeholder="PlhWeight..." name="PlhWeight" id="plhweight"></p>
        <p><input placeholder="Pll" name="Pll" onchange="pontoonLegs()" id="pll"></p>
        <p><input placeholder="Plhl" name="Plhl" id="plhl"></p>


    </div>
    <div class="tab">ROOF SUPPORT LEG:
        <h1>Deck LEG</h1>
        <p><input placeholder="Nd..." name="Nd" id="nd"></p>
        <p><input placeholder="Dls..." name="Dls" id="dls"></p>
        <p><input placeholder="Dlh..." name="Dlh" id="dlh"></p>
        <p><input placeholder="DlsSch..." name="DlsSch"></p>
        <p><input placeholder="DlhSch" name="DlhSch"></p>
        <p><input placeholder="DlsWeight" name="DlsWeight"></p>
        <p><input placeholder="DlhWeight..." name="DlhWeight"></p>
        <p><input placeholder="Dll" id="dll" name="Dll"></p>
        <p><input placeholder="Dlhl" id="dlhl" name="Dlhl"></p>


    </div>
    <div class="tab">ROOF SUPPORT LEG:
        <h1>Weight Calculation</h1>
        <p><input placeholder="Top Pontoon w..." name="tpw" id="tpw"></p>
        <p><input placeholder="Bottom pontoon w..." id="bpw" name="bpw"></p>
        <p><input placeholder="Inner rim w..." id="irw" name="irw"></p>
        <p><input placeholder="Outer rim w..." id="orw" name="orw"></p>
        <p><input placeholder="bulheads w" name="bw" id="bw"></p>
        <p><input placeholder="deck Plate w" name="dpw" id="dpw"></p>
        <p><input placeholder="pontoon legs w..." id="plw" name="plw"></p>
        <p><input placeholder="pontoon legs housing w" id="plhw" name="plhw'"></p>
        <p><input placeholder="deck legs w" id="dlw" name="dlw"></p>
        <p><input placeholder="deck legs housing w..." id="dlhw" name="dlhw"></p>
        <p><input placeholder="paw" name="paw" id="paw"></p>
        <p><input placeholder="daw" name="daw"></p>
        <p><input placeholder="rafters w" id="rw" name="rw'"></p>
        <p><input placeholder="posts w" id="pw" name="pw"></p>


    </div>
    <div class="tab">ROOF SUPPORT LEG:
        <h1>Weight Calculation</h1>
        <p><input placeholder="pontoon components..." onchange="" id="wp" name="wp"></p>
        <p><input placeholder="deck components..." id="wd" onchange="tdE()" name="wd"></p>
        <p><input placeholder="tatal weight of floating roof..." id="wr" name="wr"></p>


    </div>
    <div class="tab">ROOF SUPPORT LEG:
        <h1>PONTOON VOLUME</h1>
        <p><input placeholder="h1..." id="h1" onchange="volume1()" name="h1"></p>
        <p><input placeholder="h2..." id="h2" onchange="volume2()" name="h2"></p>
        <p><input placeholder="h3..." id="h3" onchange="volume3()" name="h3"></p>
        <p><input placeholder="v1..." id="v1" name="v1"></p>
        <p><input placeholder="v2" id="v2" name="v2"></p>
        <p><input placeholder="v3" id="v3" name="v3"></p>
        <p><input placeholder="tp..." id="tp" name="tp"></p>
        <p><input placeholder="vol" id="vol" name="vol"></p>


    </div>
    <div class="tab">SETTING DECK LEVEL:
        <h1>Operation floatation level – Deck</h1>
        <p><input placeholder="tde" id="tde" name="tde"></p>
        <p><input placeholder="dd" id="dd" onclick="hdeck()" name="dd"></p>
        <h1>Operation floatation level – Pontoon</h1>
        <p><input placeholder="pdv" id="pdv" name="pdv"></p>
        <p><input placeholder="dp" id="dp" name="dp"></p>
        <p><input placeholder="dlh" id="diffh" name="dlh2"></p>


    </div>
    <div class="tab">SETTING DECK LEVEL:
        <h1>Operation floatation level – Deck</h1>
        <p><input placeholder="Volume Displaced by the Backslope..." id="v12" name="v12 "></p>
        <p><input placeholder="va..." id="va" name="va"></p>
        <p><input placeholder="vr..." id="vr" name="vr"></p>
        <p><input placeholder="d(deck)..." id="hdeck" name="d12"></p>


    </div>
    <div class="tab">SETTING DECK LEVEL:
        <h1>FLOATATION LEVEL FOR ROOF - PONTOON & DECK FOR 10" (254MM) OF ACCUMULATED RAIN WATER</h1>
        <p><input placeholder="hrain..." id="hrain" name="hrain"></p>
        <p><input placeholder="Adeck..." id="adeck" name="adeck"></p>
        <p><input placeholder="vrain..." id="vrain" name="vrain"></p>
        <p><input placeholder="vdisplacement..." id="vdisplacement" name="vdisplacement"></p>
        <p><input placeholder="h(rain)" id="hrain2" name="hrain2"></p>


    </div>
    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN DATA</h1>
        <p><input placeholder="t..." id="t" name="t"></p>
        <p><input placeholder="alpha..." id="alpha" name="alpha"></p>
        <p><input placeholder="poisson's ratio..." id="pr" name="pr"></p>
        <p><input placeholder="Modulus of Elasticity" id="e" name="e"></p>
        <p><input placeholder="k1" id="k1" name="k1"></p>
        <p><input placeholder="k2..." id="k2" name="k2"></p>
        <p><input placeholder="k31" id="k31" name="k31"></p>
        <p><input placeholder="k41" id="k41" name="k41"></p>
        <p><input placeholder="k32..." id="k32" name="k32"></p>
        <p><input placeholder="k42" id="k42" name="k42"></p>

    </div>

    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN CASE 1 NO RAIN WATER</h1>
        <label for="q1">Unit lateral pressure (equiv. weight of deck + live load that float on product)</label><br>
        <p><input id="q1" name="q1"></p>
        <label for="y1">maximum deflection,y1</label><br>
        <p><input id="y1" name="y1"></p>
        <label for="otc1">σtotal center 1</label><br>
        <p><input id="otc1" name="otc1"></p>
        <label for="obc1">σbending center 1</label><br>
        <p><input id="obc1" name="obc1"></p>
        <label for="odc1">σdiaphgram center 1 </label><br>
        <p><input id="odc1" name="odc1"></p>
        <label for="ote1">σtotal edge1</label><br>
        <p><input id="ote1" name="ote1"></p>
        <label for="obe1">σbending edge 1</label><br>
        <p><input id="obe1" name="obe1"></p>
        <label for="ode1">σdiaphgram edge 1</label><br>
        <p><input id="ode1" name="ode1"></p>
        <label for="rh1">Radial on rim,Rh1</label><br>
        <p><input id="rh1" name="rh1"></p>


    </div>
    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN CASE 2  10" RAIN WATER</h1>
        <label for="hrain1">Rain accumulation of 10” (254 mm)</label><br>
        <p><input id="hrain1" name="hrain1"></p>
        <label for="adeck1">deck area</label><br>
        <p><input id="adeck1" name="adeck1"></p>
        <label for="vrain1">Volume of rain water</label><br>
        <p><input id="vrain1" name="vrain1"></p>
        <label for="wrain">Weight of 10" accumulated rain water </label><br>
        <p><input id="wrain" name="wrain"></p>
        <label for="ubl">Upward buoyant load </label><br>
        <p><input id="ubl" name="ubl"></p>
        <label for="dl">Downward load1</label><br>
        <p><input id="dl" name="dl"></p>
        <label for="ndfad">Nett downward force acting on deck </label><br>
        <p><input id="ndfad" name="ndfad"></p>
        <label for="q2">Unit lateral pressure</label><br>
        <p><input id="q2" name="q2"></p>



    </div>

    <div class="tab">SETTING DECK LEVEL:
        <h1>CENTRE DECK STRESS DESIGN CASE 1 NO RAIN WATER</h1>

        <label for="y2">maximum deflection</label><br>
        <p><input id="y2" name="y2"></p>
        <label for="otc2">σtotal center 2</label><br>
        <p><input id="otc2" name="otc2"></p>
        <label for="obc2">σbending center 2</label><br>
        <p><input id="obc2" name="obc2"></p>
        <label for="odc2">σdiaphgram center 2 </label><br>
        <p><input id="odc2" name="odc2"></p>
        <label for="ote2">σtotal edge2</label><br>
        <p><input id="ote2" name="ote2"></p>
        <label for="obe2">σbending edge 2</label><br>
        <p><input id="obe2" name="obe2"></p>
        <label for="ode2">σdiaphgram edge 2</label><br>
        <p><input id="ode2" name="ode2"></p>
        <label for="rh2">Radial on rim,Rh2</label><br>
        <p><input id="rh2" name="rh2"></p>


    </div>

    <div class="tab">PONTOON STRESS DESIGN:
        <h1>PONTOON PROPERTIES</h1>
        <label for="pdir">Nominal diameter of Inner Rim</label><br>
        <p><input placeholder="Nominal diameter of Inner Rim..." id="pdir" name="pdir"></p>
        <label for="piw">pontoon inside width</label><br>
        <p><input placeholder="pontoon inside width..." id="piw" name="piw"></p>
        <label for="ptir">Inner Rim Thickness</label><br>
        <p><input placeholder="Inner Rim Thickness" id="ptir" name="ptir"></p>
        <label for="ptor">Outer Rim Thickness</label><br>
        <p><input placeholder="Outer Rim Thickness..." id="ptor" name="ptor"></p>
        <label for="pttp">Top Pontoon Thk</label><br>
        <p><input placeholder="Top Pontoon Thk" id="pttp" name="pttp"></p>
        <label for="ptbp">Btm Pontoon Thk</label><br>
        <p><input placeholder="Btm Pontoon Thk" id="ptbp" name="ptbp"></p>
        <label for="tpsa">Top Pontoon slope angle</label><br>
        <p><input placeholder="Top Pontoon slope angle..." id="tpsa" name="tpsa"></p>
        <label for="ba">Backslope angle</label><br>
        <p><input placeholder="Backslope angle" id="ba" name="ba"></p>
        <label for="tpl">Top pontoon length</label><br>
        <p><input placeholder="Top pontoon length" id="tpl" name="tpl"></p>
        <label for="bpl">Btm pontoon length</label><br>
        <p><input placeholder="Btm pontoon length..." id="bpl" name="bpl"></p>
        <label for="horwep">Outer rim height</label><br>
        <p><input placeholder="Outer rim height" id="horwep" name="horwep"></p>
        <label for="phir">Inner rim height</label><br>
        <p><input placeholder="Inner rim height..." id="phir" name="phir"></p>

    </div>


    <div style="overflow:auto;">
        <div style="float:right;">
            <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
            <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
        </div>
    </div>
    <!-- Circles which indicates the steps of the form: -->
    <div style="text-align:center;margin-top:40px;">
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>

    </div>
</form>

<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab
    function materialValues() {
        var x = document.getElementById("materialOfConstruction").value;
        if (x == "A283M Gr C") {
            document.getElementById("specificMinimumYieldStress").value = 205;
            document.getElementById("modulusOfElasticity").value = 209000;
            document.getElementById("pplate").value = 7850;
        }
        if (x == "A285M Gr C") {
            document.getElementById("specificMinimumYieldStress").value = 205;
            document.getElementById("modulusOfElasticity").value = 190000;
            document.getElementById("pplate").value = 7800;
        }
    }

    function topPontoon() {
        var oor = document.getElementById("oor").value;
        var oir = document.getElementById("oir").value;
        var pplate = document.getElementById("pplate").value;
        var ttp = document.getElementById("ttp").value;
        document.getElementById("tpw").value = ((3.14159 / 4) * ((oor * oor) - (oir * oir)) * pplate * ttp);
    }

    function bottomPontoon() {
        var oor = document.getElementById("oor").value;
        var oir = document.getElementById("oir").value;
        var pplate = document.getElementById("pplate").value;
        var tbp = document.getElementById("tbp").value;
        document.getElementById("bpw").value = ((3.14159 / 4) * ((oor * oor) - (oir * oir)) * pplate * tbp);
    }

    function outerRim() {
        var oor = document.getElementById("oor").value;
        var tor = document.getElementById("tor").value;
        var pplate = document.getElementById("pplate").value;
        var hor = document.getElementById("hor").value;
        document.getElementById("orw").value = ((3.14159 / 4) * ((oor * pplate * hor * tor)));
    }

    function innerRim() {
        var hir = document.getElementById("hir").value;
        var oir = document.getElementById("oir").value;
        var pplate = document.getElementById("pplate").value;
        var tir = document.getElementById("tir").value;
        document.getElementById("irw").value = (3.14159 * oir * pplate * tir * hir);
    }


    function bulkheads() {
        var boh = document.getElementById("boh").value;
        var bih = document.getElementById("bih").value;
        var pplate = document.getElementById("pplate").value;
        var wb = document.getElementById("wb").value;
        var tb = document.getElementById("tb").value;
        var n = document.getElementById("n").value;
        document.getElementById("bw").value = (1 / 2) * (boh + bih) * tb * wb * n * pplate;
    }

    function deckPlate() {
        var oir = document.getElementById("oir").value;
        var td = document.getElementById("td").value;
        var pplate = document.getElementById("pplate").value;
        document.getElementById("bw").value = (3.14159 / 4) * (oir * oir) * td * pplate;
    }

    function pontoonLegs() {
        var np = document.getElementById("np").value;
        var pls = document.getElementById("pls").value;
        var pll = document.getElementById("pll").value;
        document.getElementById("plw").value = (np * pls * pll) / 1000;

    }


    function tests() {
        document.getElementById("testing").value = parseFloat(document.getElementById("test").value);

    }

    function testss() {
        document.getElementById("pproduct").value = document.getElementById("testing").value;

    }

    function pontoonLegsHousing() {
        var np = document.getElementById("np").value;
        var plh = document.getElementById("plh").value;
        var plhl = document.getElementById("plhl").value;
        document.getElementById("plhw").value = (np * plh * plhl) / 1000;

    }

    function deckLegs() {
        var np = document.getElementById("nd").value;
        var plh = document.getElementById("dls").value;
        var plhl = document.getElementById("dll").value;
        document.getElementById("dlw").value = (np * plh * plhl) / 1000;

    }

    function deckLegsHousing() {
        var np = document.getElementById("nd").value;
        var plh = document.getElementById("dlh").value;
        var plhl = document.getElementById("dlhl").value;
        document.getElementById("dlhw").value = (np * plh * plhl) / 1000;

    }

    function rafters() {
        var w = document.getElementById("w").value;
        var rafterNos = document.getElementById("rafterNos").value;
        var rafterWeight = document.getElementById("rafterWeight").value;
        document.getElementById("rw").value = rafterNos * w * rafterWeight;

    }

    function posts() {
        var hor = document.getElementById("hor").value;
        var hir = document.getElementById("hir").value;
        var hext = document.getElementById("hext").value;
        var postWeight = document.getElementById("postWeight").value;
        var postNos = document.getElementById("postNos").value;
        var tpw = document.getElementById("tpw").value;
        var bpw = document.getElementById("bpw").value;
        var irw = document.getElementById("irw").value;
        var orw = document.getElementById("orw").value;
        var bw = document.getElementById("bw").value;
        var plw = document.getElementById("plw").value;
        var plhw = document.getElementById("plhw").value;
        var paw = document.getElementById("paw").value;
        var rw = document.getElementById("rw").value;
        var pw = ((hir + hor - hext) / 1000) * postNos * postWeight;
        var wp = tpw + bpw + irw + orw + bw + plw + plhw + paw + rw + pw;
        var v1 = document.getElementById("v1").value;
        var oir = document.getElementById("oir").value;
        var oor = document.getElementById("oor").value;
        var pproduct = document.getElementById("pproduct").value;
        var pdv = (wp / pproduct) * 1000;
        var dp = ((pdv - v1) * Math.pow(1000, 3)) / ((3.14 / 4) * (Math.pow(oor, 2) - Math.pow(oir, 2)));

        document.getElementById("wp").value = wp;
        document.getElementById("pdv").value = pdv;
        document.getElementById("dp").value = dp;


        document.getElementById("rw").value = pw;


    }

    function volume1() {
        var h1 = document.getElementById("h1").value;
        var oir = document.getElementById("oir").value;
        var w = document.getElementById("w").value;
        document.getElementById("v1").value = (0.5 * h1 * 1.6 * (((oir + 2) * 2) / 3 * w) / 100);

    }

    function volume2() {
        var h2 = document.getElementById("h2").value;
        var oir = document.getElementById("oir").value;
        var oor = document.getElementById("oor").value;
        document.getElementById("v2").value = (h2 * 1.6 * (((oir + oor) / 2) / 100));
    }

    function volume3() {
        var h3 = document.getElementById("h3").value;
        var oir = document.getElementById("oir").value;
        var w = document.getElementById("w").value;
        var v1 = document.getElementById("v1").value;
        var v2 = document.getElementById("v2").value;
        var v3 = (0.5 * h3 * 1.6 * (((oir + 2) * 2) / 3 * w) / 100);
        document.getElementById("v3").value = v3;
        document.getElementById("vol").value = v1 + v2 + v3;
    }

    function wPontoon() {


    }

    function tdE() {
        var wd = document.getElementById("wd").value;
        var dpw = document.getElementById("dpw").value;
        var td = document.getElementById("td").value;
        var pplate = document.getElementById("pplate").value;
        var pproduct = document.getElementById("pproduct").value;
        document.getElementById("tde").value = (wd / dpw) * td;
        document.getElementById("dd").value = ((pplate / (pproduct * 1000))) * (wd / dpw) * td;
    }
    function noRainWater(){
        var dd = parseFloat(document.getElementById("dd").value);
        var wd = parseFloat(document.getElementById("wd").value);
        var oir =parseFloat(document.getElementById("oir").value);
        var rll = parseFloat(document.getElementById("rll").value);
        var pproduct = parseFloat(document.getElementById("pproduct").value);
        if (Math.abs(9.8*(wd-(3.14/4)*Math.pow(oir,2)*dd*pproduct*1000/1000000000)/(3.14/4)*Math.pow(oir,2))>Math.abs(9.8*(wd-(3.14/4)*Math.pow(oir,2)*dd*pproduct*1000/1000000000)/(3.14/4)*Math.pow(oir,2)+rll/1000)){
            document.getElementById("q1").value=9.8*(wd-(3.14/4)*Math.pow(oir,2)*dd*pproduct*1000/1000000000)/(3.14/4)*Math.pow(oir,2);
        }
        else {
            document.getElementById("q1").value=9.8*(wd-(3.14/4)*Math.pow(oir,2)*dd*pproduct*1000/1000000000)/(3.14/4)*Math.pow(oir,2)+rll/1000;
        }
    }


    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        //... and run a function that will display the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
        if (currentTab >= x.length) {
            // ... the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }

    $(function () {
        var str = '#len'; //increment by 1 up to 1-nelemnts
        $(document).ready(function () {
            var i, stop;
            i = 1;
            stop = 4; //num elements
            setInterval(function () {
                if (i > stop) {
                    return;
                }
                $('#len' + (i++)).toggleClass('bounce');
            }, 500)
        });
    });
</script>

</body>
</html>
